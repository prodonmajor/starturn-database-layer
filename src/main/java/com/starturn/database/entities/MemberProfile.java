package com.starturn.database.entities;
// Generated 12-Jan-2020 16:59:07 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import org.apache.lucene.analysis.core.KeywordTokenizerFactory;
import org.apache.lucene.analysis.core.LowerCaseFilterFactory;
import org.apache.lucene.analysis.core.StopFilterFactory;
import org.apache.lucene.analysis.miscellaneous.WordDelimiterFilterFactory;
import org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory;
import org.apache.lucene.analysis.ngram.NGramFilterFactory;
import org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory;
import org.apache.lucene.analysis.standard.StandardTokenizerFactory;
import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Analyzer;
import org.hibernate.search.annotations.AnalyzerDef;
import org.hibernate.search.annotations.AnalyzerDefs;
import org.hibernate.search.annotations.ContainedIn;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.Parameter;
import org.hibernate.search.annotations.Store;
import org.hibernate.search.annotations.TokenFilterDef;
import org.hibernate.search.annotations.TokenizerDef;

/**
 * MemberProfile generated by hbm2java
 */
@Entity
@Table(name="member_profile"
    ,catalog="starturn"
    , uniqueConstraints = {@UniqueConstraint(columnNames="email_address"), @UniqueConstraint(columnNames="username")} 
)
@Indexed
@AnalyzerDefs({
    @AnalyzerDef(
            name = "autocompleteEdgeAnalyzer",
            tokenizer = @TokenizerDef(factory = KeywordTokenizerFactory.class),
            filters = {
                @TokenFilterDef(
                        factory = PatternReplaceFilterFactory.class,
                        params = {
                            @Parameter(name = "pattern", value = "([^a-zA-Z0-9\\.])"),
                            @Parameter(name = "replacement", value = " "),
                            @Parameter(name = "replace", value = "all")
                        }
                ),
                @TokenFilterDef(factory = LowerCaseFilterFactory.class),
                @TokenFilterDef(factory = StopFilterFactory.class),
                // index partial words starting at the front
                @TokenFilterDef(
                        factory = EdgeNGramFilterFactory.class,
                        params = {
                            @Parameter(name = "minGramSize", value = "3"),
                            @Parameter(name = "maxGramSize", value = "50")
                        }
                )
            }
    ),
    @AnalyzerDef(
            name = "autocompleteNGramAnalyzer",
            tokenizer = @TokenizerDef(factory = StandardTokenizerFactory.class),
            filters = {
                @TokenFilterDef(
                        factory = PatternReplaceFilterFactory.class,
                        params = {
                            @Parameter(name = "pattern", value = "([^a-zA-Z0-9\\.])"),
                            @Parameter(name = "replacement", value = " "),
                            @Parameter(name = "replace", value = "all")
                        }
                ),
                @TokenFilterDef(factory = WordDelimiterFilterFactory.class),
                @TokenFilterDef(factory = LowerCaseFilterFactory.class),
                // index partial words starting at the front
                @TokenFilterDef(
                        factory = NGramFilterFactory.class,
                        params = {
                            @Parameter(name = "minGramSize", value = "3"),
                            @Parameter(name = "maxGramSize", value = "5")
                        }
                )
            }
    ),
    @AnalyzerDef(
            name = "standardAnalyzer",
            tokenizer = @TokenizerDef(factory = StandardTokenizerFactory.class),
            filters = {
                @TokenFilterDef(
                        factory = PatternReplaceFilterFactory.class,
                        params = {
                            @Parameter(name = "pattern", value = "([^a-zA-Z0-9\\.])"),
                            @Parameter(name = "replacement", value = " "),
                            @Parameter(name = "replace", value = "all")
                        }
                ),
                @TokenFilterDef(factory = WordDelimiterFilterFactory.class),
                @TokenFilterDef(factory = LowerCaseFilterFactory.class)
            }
    )
})
public class MemberProfile  implements java.io.Serializable {

    @DocumentId
     private int id;
     private Long version;
     private Bank bank;
     @Field(index = Index.YES, analyze = Analyze.YES, analyzer = @Analyzer(definition = "standardAnalyzer"), store = Store.NO)
     private String username;
     @Field(index = Index.YES, analyze = Analyze.YES, analyzer = @Analyzer(definition = "standardAnalyzer"), store = Store.NO)
     private String name;
     @Field(index = Index.YES, analyze = Analyze.YES, analyzer = @Analyzer(definition = "standardAnalyzer"), store = Store.NO)
     private String emailAddress;
     @Field(index = Index.YES, analyze = Analyze.YES, analyzer = @Analyzer(definition = "standardAnalyzer"), store = Store.NO)
     private String phoneNumber;
     private String gender;
     private String password;
     private Boolean accpetedTermsCondition;
     private Boolean locked;
     private Boolean firstTime;
     private Boolean active;
     private Boolean accountClosed;
     private Boolean accountSuspended;
     private Date accountSuspensionDate;
     private Date accountClosureDate;
     private Date creationDate;
     private Date lastLoginDate;
     private Date cardContributionDebitDate;
     private String lastLoginTime;
     private String bankAccountNumber;
     private String bvn;
     private String atmCardNo;
     private String atmCardExpiry;
     private Integer atmCvv;
     private Integer atmPin;
     private String atmCardType;
     private Set userTokens = new HashSet(0);
     private Set esusuGroupMemberses = new HashSet(0);
     private Set transactions = new HashSet(0);
     private Set targetSavingses = new HashSet(0);
     private Set userGroups = new HashSet(0);
     private Set esusuGroupInviteses = new HashSet(0);

    public MemberProfile() {
    }

	
    public MemberProfile(int id) {
        this.id = id;
    }
    public MemberProfile(int id, Bank bank, String username, String name, String emailAddress, String phoneNumber, String gender, String password, Boolean accpetedTermsCondition, Boolean locked, Boolean firstTime, Boolean active, Boolean accountClosed, Boolean accountSuspended, Date accountSuspensionDate, Date accountClosureDate, Date creationDate, Date lastLoginDate,Date cardContributionDebitDate, String lastLoginTime, String bankAccountNumber, String bvn, String atmCardNo, String atmCardExpiry, Integer atmCvv, Integer atmPin, String atmCardType, Set userTokens, Set esusuGroupMemberses, Set transactions, Set targetSavingses, Set userGroups, Set esusuGroupInviteses) {
       this.id = id;
       this.bank = bank;
       this.username = username;
       this.name = name;
       this.emailAddress = emailAddress;
       this.phoneNumber = phoneNumber;
       this.gender = gender;
       this.password = password;
       this.accpetedTermsCondition = accpetedTermsCondition;
       this.locked = locked;
       this.firstTime = firstTime;
       this.active = active;
       this.accountClosed = accountClosed;
       this.accountSuspended = accountSuspended;
       this.accountSuspensionDate = accountSuspensionDate;
       this.accountClosureDate = accountClosureDate;
       this.creationDate = creationDate;
       this.lastLoginDate = lastLoginDate;
       this.cardContributionDebitDate = cardContributionDebitDate;
       this.lastLoginTime = lastLoginTime;
       this.bankAccountNumber = bankAccountNumber;
       this.bvn = bvn;
       this.atmCardNo = atmCardNo;
       this.atmCardExpiry = atmCardExpiry;
       this.atmCvv = atmCvv;
       this.atmPin = atmPin;
       this.atmCardType = atmCardType;
       this.userTokens = userTokens;
       this.esusuGroupMemberses = esusuGroupMemberses;
       this.transactions = transactions;
       this.targetSavingses = targetSavingses;
       this.userGroups = userGroups;
       this.esusuGroupInviteses = esusuGroupInviteses;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    @Version
    @Column(name="version")
    public Long getVersion() {
        return this.version;
    }
    
    public void setVersion(Long version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="bank_id")
    public Bank getBank() {
        return this.bank;
    }
    
    public void setBank(Bank bank) {
        this.bank = bank;
    }

    
    @Column(name="username", unique=true, length=50)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="name", length=500)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="email_address", unique=true, length=100)
    public String getEmailAddress() {
        return this.emailAddress;
    }
    
    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    
    @Column(name="phone_number", length=50)
    public String getPhoneNumber() {
        return this.phoneNumber;
    }
    
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    
    @Column(name="gender", length=50)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    
    @Column(name="password", length=500)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="accpeted_terms_condition")
    public Boolean getAccpetedTermsCondition() {
        return this.accpetedTermsCondition;
    }
    
    public void setAccpetedTermsCondition(Boolean accpetedTermsCondition) {
        this.accpetedTermsCondition = accpetedTermsCondition;
    }

    
    @Column(name="locked")
    public Boolean getLocked() {
        return this.locked;
    }
    
    public void setLocked(Boolean locked) {
        this.locked = locked;
    }

    
    @Column(name="first_time")
    public Boolean getFirstTime() {
        return this.firstTime;
    }
    
    public void setFirstTime(Boolean firstTime) {
        this.firstTime = firstTime;
    }

    
    @Column(name="active")
    public Boolean getActive() {
        return this.active;
    }
    
    public void setActive(Boolean active) {
        this.active = active;
    }

    
    @Column(name="account_closed")
    public Boolean getAccountClosed() {
        return this.accountClosed;
    }
    
    public void setAccountClosed(Boolean accountClosed) {
        this.accountClosed = accountClosed;
    }

    
    @Column(name="account_suspended")
    public Boolean getAccountSuspended() {
        return this.accountSuspended;
    }
    
    public void setAccountSuspended(Boolean accountSuspended) {
        this.accountSuspended = accountSuspended;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="account_suspension_date", length=10)
    public Date getAccountSuspensionDate() {
        return this.accountSuspensionDate;
    }
    
    public void setAccountSuspensionDate(Date accountSuspensionDate) {
        this.accountSuspensionDate = accountSuspensionDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="account_closure_date", length=10)
    public Date getAccountClosureDate() {
        return this.accountClosureDate;
    }
    
    public void setAccountClosureDate(Date accountClosureDate) {
        this.accountClosureDate = accountClosureDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="creation_date", length=10)
    public Date getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="last_login_date", length=10)
    public Date getLastLoginDate() {
        return this.lastLoginDate;
    }
    
    public void setLastLoginDate(Date lastLoginDate) {
        this.lastLoginDate = lastLoginDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="card_contribution_debit_date", length=10)
    public Date getCardContributionDebitDate() {
        return cardContributionDebitDate;
    }

    public void setCardContributionDebitDate(Date cardContributionDebitDate) {
        this.cardContributionDebitDate = cardContributionDebitDate;
    }
    
    

    
    @Column(name="last_login_time", length=50)
    public String getLastLoginTime() {
        return this.lastLoginTime;
    }
    
    public void setLastLoginTime(String lastLoginTime) {
        this.lastLoginTime = lastLoginTime;
    }

    
    @Column(name="bank_account_number", length=50)
    public String getBankAccountNumber() {
        return this.bankAccountNumber;
    }
    
    public void setBankAccountNumber(String bankAccountNumber) {
        this.bankAccountNumber = bankAccountNumber;
    }

    
    @Column(name="bvn", length=500)
    public String getBvn() {
        return this.bvn;
    }
    
    public void setBvn(String bvn) {
        this.bvn = bvn;
    }

    
    @Column(name="atm_card_no", length=50)
    public String getAtmCardNo() {
        return this.atmCardNo;
    }
    
    public void setAtmCardNo(String atmCardNo) {
        this.atmCardNo = atmCardNo;
    }

    
    @Column(name="atm_card_expiry", length=50)
    public String getAtmCardExpiry() {
        return this.atmCardExpiry;
    }
    
    public void setAtmCardExpiry(String atmCardExpiry) {
        this.atmCardExpiry = atmCardExpiry;
    }

    
    @Column(name="atm_cvv")
    public Integer getAtmCvv() {
        return this.atmCvv;
    }
    
    public void setAtmCvv(Integer atmCvv) {
        this.atmCvv = atmCvv;
    }

    
    @Column(name="atm_pin")
    public Integer getAtmPin() {
        return this.atmPin;
    }
    
    public void setAtmPin(Integer atmPin) {
        this.atmPin = atmPin;
    }

    
    @Column(name="atm_card_type", length=50)
    public String getAtmCardType() {
        return this.atmCardType;
    }
    
    public void setAtmCardType(String atmCardType) {
        this.atmCardType = atmCardType;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="memberProfile")
    public Set getUserTokens() {
        return this.userTokens;
    }
    
    public void setUserTokens(Set userTokens) {
        this.userTokens = userTokens;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="memberProfile")
    public Set getEsusuGroupMemberses() {
        return this.esusuGroupMemberses;
    }
    
    public void setEsusuGroupMemberses(Set esusuGroupMemberses) {
        this.esusuGroupMemberses = esusuGroupMemberses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="memberProfile")
    public Set getTransactions() {
        return this.transactions;
    }
    
    public void setTransactions(Set transactions) {
        this.transactions = transactions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="memberProfile")
    public Set getTargetSavingses() {
        return this.targetSavingses;
    }
    
    public void setTargetSavingses(Set targetSavingses) {
        this.targetSavingses = targetSavingses;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_group_members", catalog="starturn", joinColumns = { 
        @JoinColumn(name="member_profile_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="user_group_id", nullable=false, updatable=false) })
    public Set getUserGroups() {
        return this.userGroups;
    }
    
    public void setUserGroups(Set userGroups) {
        this.userGroups = userGroups;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="memberProfile")
    public Set getEsusuGroupInviteses() {
        return this.esusuGroupInviteses;
    }
    
    public void setEsusuGroupInviteses(Set esusuGroupInviteses) {
        this.esusuGroupInviteses = esusuGroupInviteses;
    }




}


